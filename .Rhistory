source("~/GitHub/haumap02/code/Map_setup.R")
source("~/GitHub/haumap02/code/Map_setup.R")
#setwd(r'(C:\Users\00758120\Harper Adams University\George Wager - farm-data)')
# install and load required packages for the session
# libs = c("stringr", "openxlsx", "data.table", "readxl", "rgdal", "sf", "raster", "broom", "leaflet", "htmlwidgets")
libs = c("stringr", "sf", "leaflet", "htmlwidgets")
PackageCheck(libs)
source("~/GitHub/haumap02/code/Map_setup.R")
map
shiny::runApp()
source("code/functions/PackageCheck_F.R")
source("code/functions/StandardCropTypes_F.R")
#setwd(r'(C:\Users\00758120\Harper Adams University\George Wager - farm-data)')
# install and load required packages for the session
# libs = c("stringr", "openxlsx", "data.table", "readxl", "rgdal", "sf", "raster", "broom", "leaflet", "htmlwidgets")
libs = c("stringr", "sf", "leaflet", "htmlwidgets")
PackageCheck(libs)
# Location of source files
shpdir <- paste0(getwd(), "/data/harper-farm-boundaries") # shapefiles
croptypes <- read.csv("input/crop_colors.csv") # crop colors
fieldcodes <- read.csv("input/FIELD_CODES.csv")
# Make the cropping datafile for the required season ---------------------------
#season <- 2022
source("code/CROPPING.R")
colnames(cropping)[colnames(cropping)=="Field"] <- "FIELD_NAME_SumIt"
m <- match(cropping$FIELD_NAME_SumIt, fieldcodes$FIELD_NAME_SumIt)
cropping$FIELD_CODE <- fieldcodes$FIELD_CODE[m]
# Put the shapefiles together ----------------------------------------------------
file_list <- dir(shpdir, pattern = ".shp", full.names = TRUE)
# read all the shape files and store as a list
shapefile_list <- lapply(file_list, read_sf, as_tibble = T)
# Look to make sure they're all in the same CRS
s <- unique(unlist(sapply(shapefile_list, st_crs)))
# cat(s) # exploratory - remove
# Combine the list of sf objects into a single object (rbind.sf())
all_fields <- do.call(what = sf:::rbind.sf, args=shapefile_list)
colnames(all_fields)[colnames(all_fields)=="FIELD_NAME"] <- "FIELD_NAME_Omnia"
m <- match(all_fields$FIELD_NAME_Omnia, fieldcodes$FIELD_NAME_Omnia)
all_fields$FIELD_CODE <- fieldcodes$FIELD_CODE[m]
# New matching procedure based on manually-matched field names/codes
m <- match(all_fields$FIELD_CODE, cropping$FIELD_CODE)
all_fields$CropType <- cropping$CropType[m]
all_fields$CropType <- StandardCropTypes_F(all_fields$CropType, CropType = croptypes$CropType)
View(all_fields)
runApp()
runApp()
runApp()
runApp()
View(cropping)
source("~/GitHub/haumap02/code/Map_setup.R")
source("~/GitHub/haumap02/code/Map_crops.R")
map
source("~/GitHub/haumap02/code/Map_setup.R")
map
source("~/GitHub/haumap02/code/Map_setup.R")
map
runApp()
source("~/GitHub/haumap02/code/Map_setup.R")
map
runApp()
runApp()
